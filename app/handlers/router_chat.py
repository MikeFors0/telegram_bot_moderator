from aiogram import Router, F
from aiogram.types import Message, ChatPermissions
from aiogram.filters import Command, CommandObject
from aiogram.exceptions import TelegramBadRequest
from aiogram.enums.dice_emoji import DiceEmoji

from create_bot import bot
from filters.is_admin_chat import is_admin_chat
from utils.my_utils import parse_time

from contextlib import suppress


router = Router()
# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
router.message.filter(F.chat.type != "private")
# router.my_chat_member.filter(F.chat.type.in_({"group", "supergroup"}))


@router.message(Command('mute'), F.reply_to_message)
async def func_mute(message: Message, command: CommandObject):
    reply_message = message.reply_to_message

    if not await is_admin_chat(message, bot):
        await message.reply("<b>‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>")
        return
    date = parse_time(command.args)
    mention = reply_message.from_user.mention_html(reply_message.from_user.first_name)

    # with suppress(TelegramBadRequest):
    await bot.restrict_chat_member(chat_id=message.chat.id, 
                                        user_id=reply_message.from_user.id, 
                                        until_date=date, 
                                        permissions=ChatPermissions(can_send_messages=False))
    await message.reply(f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{mention}</b> –±—ã–ª –∑–∞–≥–ª—É—à–µ–Ω!")


@router.message(Command('unmute'), F.reply_to_message)
async def func_unmute(message: Message, command: CommandObject):
    reply_message = message.reply_to_message

    if not await is_admin_chat(message, bot):
        await message.reply("<b>‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>")
        return
    with suppress(TelegramBadRequest):
        await bot.restrict_chat_member(chat_id=message.chat.id, 
                                       user_id=reply_message.from_user.id, 
                                       permissions=ChatPermissions(can_send_messages=True))
        await message.reply("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —á–∞—Ç —Å–Ω—è—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")


@router.message(Command("ban"), F.reply_to_message)
async def func_ban(message: Message, command: CommandObject):
    reply_message = message.reply_to_message

    if not await is_admin_chat(message, bot):
        await message.reply("<b>‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>")
        return
    date = parse_time(command.args)
    mention = reply_message.from_user.mention_html(reply_message.from_user.first_name)

    with suppress(TelegramBadRequest):
        await bot.ban_chat_member(chat_id=message.chat.id, user_id=reply_message.from_user.id, until_date=date)
        await message.reply(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{mention}</b> –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")


@router.message(Command("unban"))
async def func_unban(message: Message):
    reply_message = message.reply_to_message

    if not reply_message or not await is_admin_chat(message, bot):
        await message.reply("<b‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>")
        return
    with suppress(TelegramBadRequest):
        await bot.unban_chat_member(chat_id=message.chat.id, user_id=reply_message.from_user.id, only_if_banned=True)
        await message.reply("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ —Å–Ω—è—Ç–∞")


help_text = "–í–æ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ üìñ\n\
1. '/mute' - –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Å —Ç–∞–π–º–µ—Ä–æ–º: 1h, 1d, 1w\n\
2. '/unmute' - –¥–ª—è —Å–Ω—è—Ç–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\
3. '/ban' - –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Å —Ç–∞–π–º–µ—Ä–æ–º: 1h, 1d, 1w\n\
4. '/unban' - –¥–ª—è —Å–Ω—è—Ç–∏—è –±–ª–æ–∫–∏—Ä–æ–≤—Å–∫–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n\
5. '/dice' –∏ '/basketball' - –∏–≥—Ä—ã\n\n\
–ö–æ–º–∞–Ω–¥—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"


@router.message(Command("help"))
async def help(message: Message):
    await message.answer(text=help_text)


@router.message(Command("dice"))
async def dice(message: Message):
    await message.answer_dice(emoji=DiceEmoji.DICE)


@router.message(Command("basketball"))
async def basketball(message: Message):
    await message.answer_dice(emoji=DiceEmoji.BASKETBALL)


@router.message()
async def forbidden_words(message: Message):
    with open("forbidden_words.txt") as words:
        data = words.readlines()
        clean_data = [line.strip() for line in data]
    text = message.text.lower()
    text2 = message.text.lower().replace(' ', '')
    mention = message.from_user.mention_html(message.from_user.first_name)
    for word in clean_data:
        if word in text:
            await message.delete()
            await message.answer(text=f"{mention}, –¢–∞–∫–∏–µ —Å–ª–æ–≤–∞ –∑–∞–ø—Ä–µ—â–µ–Ω—ã!\nPS:–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
        if word in text2:
            await message.delete()
            await message.answer(text=f"{mention}, –¢–∞–∫–∏–µ —Å–ª–æ–≤–∞ –∑–∞–ø—Ä–µ—â–µ–Ω—ã!\nPS:–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
    if not await is_admin_chat(message, bot):
        for enity in message.entities:
            if enity.type in ['url', 'text_link']:
                await message.delete()
                await bot.send_message("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫ - –∑–∞–ø—Ä–µ—â–µ–Ω–∞!\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Ä–µ–∫–ª–∞–º—É –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É!")